{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","moviesList","onMovieAdd","_useState","useState","_useState2","_slicedToArray","query","setQuery","_useState3","_useState4","error","setError","_useState5","_useState6","loading","setLoading","_useState7","_useState8","newMovie","setNewMovie","handleFormSubmit","event","preventDefault","fetch","concat","then","res","json","catch","Response","Error","getMovie","trim","data","movieToAdd","Poster","Title","Plot","imdbID","newMovieConstructor","finally","_Fragment","onSubmit","htmlFor","type","id","placeholder","cn","value","onChange","target","disabled","length","onClick","isAlreadyInList","find","App","setMovies","prevMovies","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b1c02fd.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport cn from 'classnames';\nimport { getMovie } from '../../api';\nimport { MovieData } from '../../types/MovieData';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  moviesList: Movie[];\n  onMovieAdd: (newMovie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ moviesList, onMovieAdd }) => {\n  const [query, setQuery] = useState('');\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [newMovie, setNewMovie] = useState<Movie | null>(null);\n\n  const newMovieConstructor = (data: MovieData) => {\n    const {\n      Poster,\n      Title,\n      Plot,\n      imdbID,\n    } = data;\n\n    return {\n      title: Title,\n      description: Plot,\n      imgUrl: Poster === 'N/A'\n        ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n        : Poster,\n      imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n      imdbId: imdbID,\n    };\n  };\n\n  const handleFormSubmit = (event: React.FormEvent) => {\n    event?.preventDefault();\n    setLoading(true);\n    setError(false);\n    setNewMovie(null);\n\n    getMovie(query.trim())\n      .then(data => {\n        if ('Error' in data) {\n          setError(true);\n        } else {\n          const movieToAdd = newMovieConstructor(data);\n\n          setNewMovie(movieToAdd);\n        }\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  const handleAddMovieButton = () => {\n    const isAlreadyInList = moviesList\n      .find(movie => movie.imdbId === newMovie?.imdbId);\n\n    if (newMovie) {\n      if (!isAlreadyInList) {\n        onMovieAdd(newMovie);\n        setNewMovie(null);\n        setQuery('');\n      } else {\n        setNewMovie(null);\n        setQuery('');\n      }\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => handleFormSubmit(event)}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', { 'is-danger': error })}\n              value={query}\n              onChange={(event) => {\n                setQuery(event.target.value);\n                setError(false);\n              }}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button is-light', { 'is-loading': loading })}\n              disabled={query.trim().length === 0}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {newMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovieButton}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {newMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={newMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=ede81a73';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleAddMovie = (newMovie: Movie) => {\n    setMovies(prevMovies => {\n      return [...prevMovies, newMovie];\n    });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          moviesList={movies}\n          onMovieAdd={handleAddMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}